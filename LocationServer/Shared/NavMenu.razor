@inherits BlazorStateComponent
@inject JsService JS

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="">LocationServer</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarContent">
        <i class="fas fa-hamburger"></i>
    </button>

    <div class="collapse navbar-collapse" id="navbarContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item dropdown">
                <button class="btn btn-outline-dark text-light dropdown-toggle" id="eqDropdown" data-toggle="dropdown">Equipment</button>
                <div class="dropdown-menu bg-dark">
                    @if (State.EQList != null)
                    {
                        @foreach (var e in State.EQList)
                        {
                            if (e.Locations != null)
                            {
                                var last = e.Locations.Last();
                                JS.AddMarker(new Marker
                                {
                                    visible = true,
                                    numb = e.z_NUMB_377,
                                    title = $"{e.z_ASID_357} {e.z_DL01_358}",
                                    address = last.formattedAddress,
                                    lat = last.latitude,
                                    lon = last.longitude
                                });
                                <a class="dropdown-item text-light" href="#"
                                   @onclick="@(() => JS.Zoom(15, new double[] { last.longitude, last.latitude }))">
                                    @e.z_APID_378 @e.z_DL01_358
                                </a>
                            }
                        }
                    }
                    else
                    {
                        <a class="dropdown-item text-light" href="#">
                            <i class="fas fa-spinner fa-spin"></i><em> Loading...</em>
                        </a>
                    }
                </div>
            </li>
        </ul>
        <div class="col"></div>
        <div class="col-auto">
            <button class="btn btn-success m-1" disabled="@Busy" @onclick="Refresh" ><i class="fas fa-sync @(Busy ? "fa-spin" : string.Empty)"></i></button>
        </div>
    </div>
</nav>

@code {
    ALMState State => Store.GetState<ALMState>();
    bool Busy { get; set; }
    async Task Refresh()
    {
        Busy = true;
        await Mediator.Send(new ALMState.EQListAction());
        Busy = false;
    }
    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }
}
